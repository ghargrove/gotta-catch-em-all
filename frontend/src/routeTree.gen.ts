// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index/route'
import { Route as SetsSetIdImport } from './routes/sets/$setId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const KidsKidIdLazyImport = createFileRoute('/kids/$kidId')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexRouteRoute = IndexRouteImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index/route.lazy').then((d) => d.Route))

const KidsKidIdLazyRoute = KidsKidIdLazyImport.update({
  path: '/kids/$kidId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/kids/$kidId.lazy').then((d) => d.Route))

const SetsSetIdRoute = SetsSetIdImport.update({
  path: '/sets/$setId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sets/$setId.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/sets/$setId': {
      preLoaderRoute: typeof SetsSetIdImport
      parentRoute: typeof rootRoute
    }
    '/kids/$kidId': {
      preLoaderRoute: typeof KidsKidIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRouteRoute,
  AboutLazyRoute,
  SetsSetIdRoute,
  KidsKidIdLazyRoute,
])
