package main

import (
	"github.com/ghargrove/pokemon-web/http/rest"
	"github.com/ghargrove/pokemon-web/internal"
	"github.com/gin-gonic/gin"
	"github.com/joho/godotenv"
	"log"
)

var schema string = `
CREATE TABLE IF NOT EXISTS users (
	id INT GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR NOT NULL,
	PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS pokemon (
	id INT GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR NOT NULL,
	PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS cards (
	id INT GENERATED BY DEFAULT AS IDENTITY,
	tcg_id VARCHAR NOT NULL,
	pokemon_id INT NOT NULL,
	PRIMARY KEY(id),
	CONSTRAINT fk_pokemon FOREIGN KEY(pokemon_id) REFERENCES pokemon(id)
);

CREATE TABLE IF NOT EXISTS cards_users (
	card_id INT NOT NULL,
	user_id INT NOT NULL,
	CONSTRAINT fk_card FOREIGN KEY(card_id) REFERENCES cards(id),
	CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES users(id)
)
`

func main() {
	err := godotenv.Load()
	if err != nil {
		log.Fatal("Error loading env file")
	}

	db := internal.CreateDB()
	db.MustExec(schema)

	r := gin.Default()

	r.GET("/api/sets", rest.HandleAllSets)
	r.GET("/api/sets/:id", rest.HandleSingleSet)
	r.GET("/api/sets/:id/cards", rest.HandleCardsForSet)
	r.GET("/api/users", func(c *gin.Context) {
		rest.HandleAllUsers(c, db)
	})
	r.GET("/api/users/:id", func(c *gin.Context) {
		rest.HandleIndividualUser(c, db)
	})
	r.Run(":8082")
}
